version: '3.11'

x-api-build-and-image: &api_build_and_image
  build:
    args:
      DOCKER_IMAGE_PREFIX: ${DOCKER_IMAGE_PREFIX}
      DOCKER_IMAGE_BASE_VERSION: '${DOCKER_IMAGE_BASE_VERSION:-base-latest}'
    context: ./src/api/.docker/api
    # noinspection ComposeUnknownKeys
    additional_contexts:
      - api-sources=./src/api
    dockerfile: Dockerfile-php-base
    cache_from:
      - ${DOCKER_IMAGE_PREFIX}/api:base-latest
  image: ${DOCKER_IMAGE_PREFIX}/api:base-latest

services:
  api:
    <<: *api_build_and_image
    environment:
      USERID: '${USERID}'
      LOG_CHANNEL: '${LOG_CHANNEL:-stack}'
    ports:
      - '${APP_PORT:-80}:80'
    networks:
      - inspire3

  api-queue:
    <<: *api_build_and_image
    environment:
      USERID: '${USERID}'
    command: /usr/bin/php artisan queue:work-when-db-is-ready
    networks:
      - inspire3

  api-schedule:
    <<: *api_build_and_image
    environment:
      USERID: '${USERID}'
    command: /usr/bin/php artisan schedule:work-when-db-is-ready
    networks:
      - inspire3

  mysql:
    image: 'mysql/mysql-server:8.0'
    ports:
      - '${DB_PORT:-3306}:${DB_PORT:-3306}'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      MYSQL_TCP_PORT: '${DB_PORT}'
    volumes:
      - 'inspire3-mysql:/var/lib/mysql'
      - './src/api/.docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
    networks:
      - inspire3
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-p${DB_PASSWORD}']
      retries: 3
      timeout: 5s

  minio:
    image: 'minio/minio:RELEASE.2023-10-25T06-33-25Z'
    ports:
      - '${FORWARD_MINIO_PORT:-9000}:9000'
      - '${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900'
    environment:
      MINIO_ROOT_USER: 'default'
      MINIO_ROOT_PASSWORD: 'password'
    volumes:
      - 'inspire3-minio:/data/minio'
    networks:
      - inspire3
    command: minio server /data/minio --console-address ":8900"
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      retries: 3
      timeout: 5s

  minio-create-bucket:
    image: minio/mc
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_BUCKET: ${AWS_BUCKET}
      AWS_ENDPOINT: ${AWS_ENDPOINT}
    networks:
      - inspire3
    entrypoint: /etc/minio/docker-entrypoint.sh
    volumes:
      - './src/api/.docker/minio/src:/etc/minio'
    depends_on:
      minio:
        condition: service_healthy
        # noinspection ComposeUnknownKeys
        restart: true

  mailpit:
    image: 'axllent/mailpit:latest'
    ports:
      - '${FORWARD_MAILPIT_PORT:-1025}:1025'
      - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
    networks:
      - inspire3

networks:
  inspire3:
    driver: bridge

volumes:
  inspire3-mysql:
    driver: local
  inspire3-minio:
    driver: local
